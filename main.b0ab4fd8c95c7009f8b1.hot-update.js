"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatehw_autochecker"]("main",{

/***/ "./src/tasksData.js":
/*!**************************!*\
  !*** ./src/tasksData.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar nullMessage = 'Nothing or a message about canceling';\nvar errorMessage = 'Error message';\nvar notPrime = 'number is not prime';\nvar prime = 'number is prime';\nvar isNot3inN = 'number is not 3^n';\nvar is3inN = 'number is 3^n';\nvar sumIs = 'sum is ';\nvar xInNIs = 'x^n is ';\nvar valuesToCheckMap = {\n  primeNum: [{\n    value: null,\n    expectedResult: nullMessage\n  }, {\n    value: '',\n    expectedResult: errorMessage\n  }, {\n    value: '        ',\n    expectedResult: errorMessage\n  }, {\n    value: '    0     ',\n    expectedResult: notPrime\n  }, {\n    value: '-11',\n    expectedResult: notPrime\n  }, {\n    value: '-7.123',\n    expectedResult: notPrime\n  }, {\n    value: '    1   ',\n    expectedResult: notPrime\n  }, {\n    value: '7.123',\n    expectedResult: notPrime\n  }, {\n    value: '  7fd74gs63jn      ',\n    expectedResult: errorMessage\n  }, {\n    value: ' 2   ',\n    expectedResult: prime\n  }, {\n    value: ' 011 ',\n    expectedResult: prime\n  }, {\n    value: '  100',\n    expectedResult: notPrime\n  }, {\n    value: ' 121 ',\n    expectedResult: notPrime\n  }, {\n    value: ' 0187 ',\n    expectedResult: notPrime\n  }, {\n    value: ' 7 ',\n    expectedResult: prime\n  }],\n  degreeOf3: [{\n    value: null,\n    expectedResult: nullMessage\n  }, {\n    value: '',\n    expectedResult: errorMessage\n  }, {\n    value: '        ',\n    expectedResult: errorMessage\n  }, {\n    value: '  9fd74gs63jn      ',\n    expectedResult: errorMessage\n  }, {\n    value: '    0     ',\n    expectedResult: isNot3inN\n  }, {\n    value: '-27',\n    expectedResult: isNot3inN\n  }, {\n    value: '-9.123',\n    expectedResult: isNot3inN\n  }, {\n    value: '    1   ',\n    expectedResult: is3inN\n  }, {\n    value: '9.123',\n    expectedResult: isNot3inN\n  }, {\n    value: ' 009   ',\n    expectedResult: is3inN\n  }, {\n    value: ' 9   ',\n    expectedResult: is3inN\n  }, {\n    value: ' 036 ',\n    expectedResult: isNot3inN\n  }, {\n    value: ' 36 ',\n    expectedResult: isNot3inN\n  }, {\n    value: '  243',\n    expectedResult: is3inN\n  }, {\n    value: ' 123456 ',\n    expectedResult: isNot3inN\n  }],\n  sumOfList: [{\n    value: null,\n    expectedResult: nullMessage\n  }, {\n    value: '',\n    expectedResult: errorMessage\n  }, {\n    value: '        ',\n    expectedResult: errorMessage\n  }, {\n    value: '  9fd74gs63jn      ',\n    expectedResult: errorMessage\n  }, {\n    value: '    0     ',\n    expectedResult: sumIs + 0\n  }, {\n    value: '-27,,10',\n    expectedResult: errorMessage\n  }, {\n    value: '-9.123,10',\n    expectedResult: sumIs + '0.877'\n  }, {\n    value: '    1,   ,',\n    expectedResult: errorMessage\n  }, {\n    value: '9.123abc,10',\n    expectedResult: errorMessage\n  }, {\n    value: ' 009   ,1.2',\n    expectedResult: sumIs + 10.2\n  }, {\n    value: ' 9,   ,1',\n    expectedResult: errorMessage\n  }, {\n    value: ' 2, 3  ,5',\n    expectedResult: sumIs + 10\n  }, {\n    value: ' 9,   ',\n    expectedResult: errorMessage\n  }, {\n    value: ' 9rdf, 4,3.222,6,1fwf,3',\n    expectedResult: errorMessage\n  }, {\n    value: ' 2, 3  ,5,20.5,5',\n    expectedResult: sumIs + 35.5\n  }],\n  pow: [{\n    value: [null, null],\n    expectedResult: nullMessage\n  }, {\n    value: ['   ', null],\n    expectedResult: errorMessage\n  }, {\n    value: ['        ', '  '],\n    expectedResult: errorMessage\n  }, {\n    value: ['  9fd74gs63jn      ', null],\n    expectedResult: errorMessage\n  }, {\n    value: ['    0     ', '0'],\n    expectedResult: xInNIs + 1\n  }, {\n    value: ['    0     ', null],\n    expectedResult: errorMessage\n  }, {\n    value: ['-3', '      '],\n    expectedResult: errorMessage\n  }, {\n    value: ['-3', '2'],\n    expectedResult: xInNIs + '9'\n  }, {\n    value: ['   3.2  ', '  2 '],\n    expectedResult: xInNIs + '10.24'\n  }, {\n    value: ['   3.2  ', '  2.2 '],\n    expectedResult: errorMessage\n  }, {\n    value: [' 009   ', '   1   '],\n    expectedResult: xInNIs + 9\n  }, {\n    value: [' 91 ', '  0 '],\n    expectedResult: xInNIs + 1\n  }, {\n    value: [' 2 ', '-02 '],\n    expectedResult: xInNIs + '0.25'\n  }, {\n    value: [' 0   ', '5'],\n    expectedResult: xInNIs + 0\n  }]\n};\nvar codeCheckPart = \"\\nconst result = []\\nconst originalPrompt = window.prompt\\nconst originalAlert = window.alert\\n\\nfor(let j = 0; j < inputs.length; j++) {\\n  result[j] = [inputs[j]]\\n  window.prompt = (function() {\\n    let asked = false\\n    let i = 0\\n    const total = Array.isArray(inputs[j].value) ? inputs[j].value.length : 1\\n    return () => {\\n      if (total <= i) {\\n        throw new Error('reask')\\n      }\\n\\n      i++\\n      return Array.isArray(inputs[j].value) ? inputs[j].value[i-1] : inputs[j].value\\n    }\\n  })()\\n  window.alert = msg => result[j].push(String(msg))\\n\\n  try {\\n    (function() {\\n      /* code */\\n    })();\\n  }\\n  catch(err) {\\n    if (err.message === 'reask') {\\n      result[j].push('[error, the app re-asks user]')\\n    }\\n    else {\\n      result[j].push('[the app failed]')\\n    }\\n  }\\n}\\nwindow.prompt = originalPrompt\\nwindow.alert = originalAlert\\nconst resultsEvent = new CustomEvent('results-ready', { detail: result });\\nwindow.dispatchEvent(resultsEvent)\";\nvar generateCode = function generateCode(valuesToCheck) {\n  return \"const inputs = \".concat(JSON.stringify(valuesToCheck), \"; \").concat(codeCheckPart);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([{\n  id: 'prime-num',\n  title: 'Prime number',\n  description: ['The user enters a number. Check if it is prime. ', 'A prime number is a whole number, larger than 1 and not having dividers except 1 and itself.'],\n  code: generateCode(valuesToCheckMap.primeNum)\n}, {\n  id: 'degree-of-3',\n  title: 'Degree of 3',\n  description: ['The user enters a number. Check if the number can be obtained as 3 in some whole degree. ', 'For example numbers 9, 81 can be obtained as they are 3^2 and 3^4, 13 cannot.'],\n  code: generateCode(valuesToCheckMap.degreeOf3)\n}, {\n  id: 'sum-of-list',\n  title: 'Sum of number list',\n  description: ['Create an array of numbers, the elements of which are specified by the user. Display the sum of these numbers.', 'Base it on the lesson task where the user enters all elements in a single line.', '\"Cancel\" should terminate the program, and an empty string should not be treated as 0.'],\n  code: generateCode(valuesToCheckMap.sumOfList)\n}, {\n  id: 'pow',\n  title: 'x^n recursively',\n  description: ['Implement a recursive function that exponentiates a number:', '- the number to be raised to the power is passed as the first argument to the function;', '- The degree is passed as the second argument to the pow(num, degree) function.', 'The number and the degree is entered by user', 'For negative powers, it should calculate (x^n = 1/x^(-n) ), for non-integer powers, it should write an error'],\n  code: generateCode(valuesToCheckMap.pow)\n}]);\n\n//# sourceURL=webpack://hw-autochecker/./src/tasksData.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("74d697f66640bcf5622f")
/******/ })();
/******/ 
/******/ }
);